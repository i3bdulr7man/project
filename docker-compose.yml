version: "3"

services:
  # MongoDB Database
  mongodb:
    image: mongo
    container_name: mongodb
    #ports:
    #  - "27017:27017"
    volumes:
      - mongo_data:/data/db 
    networks:
      - nightscout_net
    restart: always

  # FastAPI app
  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi-app
    #ports:
    #  - "8000:8000"
    environment:
      - MONGO_URI=mongodb://mongodb:27017/main_db
    depends_on:
      - mongodb
    env_file:
      - ./backend/.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - nightscout_net
    restart: always

  # Traefik Proxy
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      #- "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "80:80"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - nightscout_net
    restart: always

  # Nightscout manual example (اختياري لتجربة الخدمة)
  nightscout-example:
    image: nightscout/cgm-remote-monitor:latest
    container_name: nightscout-example
    environment:
      - MONGO_CONNECTION=mongodb://mongodb:27017/testdb
      - API_SECRET=supersecretkey123
      - PORT=1337
      - INSECURE_USE_HTTP=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ns-example.rule=Host(`example.nst1d.com`)"
      - "traefik.http.routers.ns-example.entrypoints=web"
      - "traefik.http.services.ns-example.loadbalancer.server.port=1337"
    depends_on:
      - mongodb
      - traefik
    networks:
      - nightscout_net

networks:
  nightscout_net:
    driver: bridge

volumes:
  mongo_data:
